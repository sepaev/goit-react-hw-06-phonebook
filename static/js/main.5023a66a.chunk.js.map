{"version":3,"sources":["components/Form/Form.module.css","redux/actions/newContacts_actions.js","components/Form/Form.styled.jsx","redux/types.js","components/Form/Form.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","redux/actions/filter_actions.js","redux/actions/contacts_actions.js","redux/functions/doClearNumber.js","redux/functions/checkNewContactInState.js","redux/functions/useFilter.js","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","App.js","redux/reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["module","exports","nameRef","numberRef","PhonebookForm","styled","form","FormLabel","label","FormButton","button","types","ADD","DELETE","CHANGE_FILTER","ADD_NEW_CONTACT","REMOVE_NEW_CONTACT","CHECK_NEW_CONTACT","connect","dispatch","onSubmit","e","preventDefault","target","children","inputName","value","trim","inputNumber","type","payload","newName","newNumber","addNewContactToState","className","css","name","pattern","placeholder","maxLength","title","required","mask","TextH2","h2","Notification","message","makeSearch","toLowerCase","addContact","id","uuidv4","number","deleteContact","contacts","contact","find","Notify","info","failure","doClearNumber","split","join","doClearName","checkNewContactInState","newContact","check","clearNumber","result","forEach","checkNumberExists","clearName","checkNameExists","checkNewContact","success","useFilter","filter","length","filtredArray","filterQuery","filterQueryText","filterQueryNumber","match","toString","queries","query","parseFilterQuery","includes","namesArray","concat","doFiltration","clearArray","idList","filtredList","indexOf","push","clearDoubleIDs","ContactsList","ul","SearchInput","input","ContactsItem","li","NumberSpan","span","DeleteButton","state","searchFunc","clearNewContact","filterdContacts","onInput","map","onClick","SectionStyle","section","TitleH1","h1","init","position","Section","component","doAddContact","doDeleteContact","localContacts","JSON","parse","window","localStorage","getItem","rootReducer","combineReducers","newState","setItem","stringify","store","createStore","composeWithDevTools","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5023a66a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNumber\":\"Form_inputNumber__2mVdf\"};","import types from '../types';\r\nlet nameRef;\r\nlet numberRef;\r\n\r\nexport const addNewContactToState = e => {\r\n  e.preventDefault();\r\n  nameRef = e.target.children[0].children[1];\r\n  numberRef = e.target.children[1].children[1];\r\n  const inputName = nameRef.value.trim();\r\n  const inputNumber = numberRef.value;\r\n  nameRef.value = '';\r\n\r\n  return {\r\n    type: types.ADD_NEW_CONTACT,\r\n    payload: { newName: inputName, newNumber: inputNumber },\r\n  };\r\n};\r\n\r\nexport const clearNewContactState = () => {\r\n  if (nameRef) nameRef.value = '';\r\n  if (numberRef) numberRef.value = '';\r\n  return {\r\n    type: types.REMOVE_NEW_CONTACT,\r\n    payload: { newName: '', newNumber: '' },\r\n  };\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const PhonebookForm = styled.form`\r\n  display: block;\r\n  border: solid 1px black;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  display: block;\r\n  font-size: 26px;\r\n  margin-bottom: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  display: block;\r\n  font-size: 22px;\r\n`;\r\n","const types = {\r\n  ADD: 'contacts/create',\r\n  DELETE: 'contacts/delete',\r\n\r\n  CHANGE_FILTER: 'filter/changeFilter',\r\n\r\n  ADD_NEW_CONTACT: 'newContact/create',\r\n  REMOVE_NEW_CONTACT: 'newContact/clear',\r\n  CHECK_NEW_CONTACT: 'newContact/check',\r\n};\r\nexport default types;\r\n","import { FormButton, FormLabel, PhonebookForm } from './Form.styled';\nimport PropTypes from 'prop-types';\nimport InputMask from 'react-input-mask';\nimport { addNewContactToState } from '../../redux/actions/newContacts_actions.js';\nimport { connect } from 'react-redux';\nimport css from './Form.module.css';\n\nfunction Form({ onSubmit }) {\n  return (\n    <PhonebookForm onSubmit={onSubmit}>\n      <FormLabel>\n        <span>Name</span>\n        <InputMask\n          key='nameKey'\n          className={css.inputNumber}\n          type='text'\n          name='name'\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder='Arnold Schwarzenegger'\n          maxLength='25'\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        <span>Number</span>\n        <InputMask\n          key='numberKey'\n          className={css.inputNumber}\n          type='tel'\n          name='number'\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\n          placeholder='+38 (099) 999-99-99'\n          mask='+38 (099) 999-99-99'\n          title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n          required\n        />\n      </FormLabel>\n      <FormButton type='submit'>Add contact</FormButton>\n    </PhonebookForm>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: e => dispatch(addNewContactToState(e)),\n});\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import styled from '@emotion/styled';\r\n\r\nexport const TextH2 = styled.h2`\r\n  font-weight: 400;\r\n  color: teal;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { TextH2 } from './Notification.styled';\r\n\r\nfunction  Notification ({ message }) {\r\n  return (\r\n    <div>\r\n      <TextH2>{message}</TextH2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import types from '../types';\r\n\r\nexport const makeSearch = e => {\r\n  return {\r\n    type: types.CHANGE_FILTER,\r\n    payload: e.target.value.trim().toLowerCase(),\r\n  };\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport types from '../types';\r\nimport { Notify } from 'notiflix';\r\n\r\nexport const addContact = ({ newName, newNumber }) => {\r\n  return {\r\n    type: types.ADD,\r\n    payload: {\r\n      id: uuidv4(),\r\n      name: newName,\r\n      number: newNumber,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteContact = (id, contacts) => {\r\n  if (!id) return;\r\n  const contact = contacts.find(contact => contact.id === id);\r\n  if (!contact) {\r\n    Notify.failure('Oh, no! Nothing was deleted.');\r\n    return;\r\n  }\r\n  Notify.info(`Contact ${contact.name} was removed successfully`);\r\n  return {\r\n    type: types.DELETE,\r\n    payload: id,\r\n  };\r\n};\r\n","function doClearNumber(number) {\r\n  if (!number) return number;\r\n  const noSpace = number.split(' ').join('');\r\n  const noBracket = noSpace.split('(').join('').split(')').join('');\r\n  const noSign = noBracket.split('-').join('').split('+').join('');\r\n  return noSign;\r\n}\r\nexport default doClearNumber;\r\n","import { Notify } from 'notiflix';\r\nimport doClearNumber from './doClearNumber';\r\n///////////////////////\r\nconst checkNewContactInState = (newContact, contacts) => {\r\n  const check = checkNewContact(newContact, contacts);\r\n  if (check.result) {\r\n    Notify.success(check.message);\r\n    return true;\r\n  } else {\r\n    if (check.message) Notify.failure(check.message);\r\n    return false;\r\n  }\r\n};\r\n////////////////////////\r\nfunction checkNewContact({ newName, newNumber }, contacts) {\r\n  if (!newName || !newNumber || !contacts) return { result: false, message: '' };\r\n  if (checkNumberExists(newNumber, contacts))\r\n    return { result: false, message: `Can't do this operation. Number ${newNumber} already exists.` };\r\n  if (checkNameExists(newName, contacts))\r\n    return { result: false, message: `Can't do this operation. Name ${newName} already exists.` };\r\n  return { result: true, message: 'Well Done! Added ' + newName };\r\n}\r\n\r\nfunction checkNameExists(inputName, contacts) {\r\n  let result = false;\r\n  const clearName = doClearName(inputName);\r\n  if (clearName === '') result = true;\r\n  contacts.forEach(({ name }) => {\r\n    if (clearName === doClearName(name)) result = true;\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction checkNumberExists(inputNumber, contacts) {\r\n  const clearNumber = doClearNumber(inputNumber);\r\n  let result = false;\r\n  if (inputNumber === '') result = true;\r\n  contacts.forEach(({ number }) => {\r\n    if (clearNumber === doClearNumber(number)) result = true;\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction doClearName(name) {\r\n  if (!name) return name;\r\n  return name.split(' ').join('').toLowerCase().trim();\r\n}\r\n\r\nexport default checkNewContactInState;\r\n","import doClearNumber from './doClearNumber';\r\n\r\nfunction useFilter(contacts, filter) {\r\n  if (!contacts || !contacts.length) return [];\r\n  if (!filter) return contacts;\r\n  const filtredArray = doFiltration(contacts, filter);\r\n  const clearArray = clearDoubleIDs(filtredArray);\r\n  return clearArray;\r\n}\r\n\r\nfunction doFiltration(contacts, filter) {\r\n  const { filterQueryText, filterQueryNumber } = parseFilterQuery(filter.toString());\r\n  if (filterQueryText.length > 0 || filterQueryNumber.length > 0) {\r\n    let filtredArray = [];\r\n    //поиск по номеру\r\n    if (filterQueryNumber.length > 0) {\r\n      filtredArray = contacts.filter(({ number }) => {\r\n        const clearNumberText = doClearNumber(number);\r\n        return clearNumberText.includes(filterQueryNumber);\r\n      });\r\n      //комбинированый поиск\r\n      if (filterQueryText.length > 0) {\r\n        const namesArray = contacts.filter(({ name }) => name.toLowerCase().includes(filterQueryText));\r\n        return filtredArray.length > 0 ? filtredArray.concat(namesArray) : namesArray;\r\n      }\r\n      return filtredArray;\r\n    } else {\r\n      //Поиск по имени\r\n      filtredArray = contacts.filter(({ name }) => name.toLowerCase().includes(filterQueryText));\r\n      return filtredArray;\r\n    }\r\n  }\r\n  return contacts;\r\n}\r\n\r\nfunction parseFilterQuery(filterQuery) {\r\n  let filterQueryText = '';\r\n  let filterQueryNumber = '';\r\n  if (filterQuery) {\r\n    if (filterQuery.match(/\\d+/)) {\r\n      filterQueryNumber = filterQuery.match(/\\d+/).toString();\r\n      const queries = filterQuery.split(filterQueryNumber);\r\n      const query = queries[0] || queries[1];\r\n      filterQueryText = query ? query : '';\r\n    } else {\r\n      filterQueryText = filterQuery;\r\n    }\r\n  }\r\n  return { filterQueryText, filterQueryNumber };\r\n}\r\n\r\nfunction clearDoubleIDs(contacts) {\r\n  const idList = [];\r\n  const filtredList = [];\r\n  contacts.forEach(contact => {\r\n    if (idList.indexOf(contact.id) < 0) {\r\n      idList.push(contact.id);\r\n      filtredList.push(contact);\r\n    }\r\n  });\r\n  return filtredList;\r\n}\r\n\r\nexport default useFilter;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactsList = styled.ul`\r\n  display: block;\r\n  padding-left: 10px;\r\n`;\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  font-size: 22px;\r\n  outline: unset;\r\n  &:focus,\r\n  &:hover {\r\n    filter: drop-shadow(0px 0px 5px lightblue);\r\n    border: 1px solid lightblue;\r\n  }\r\n`;\r\n\r\nexport const ContactsItem = styled.li`\r\n  display: block;\r\n  font-family: monospace;\r\n  list-style-type: disc;\r\n  font-size: 18px;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nexport const NumberSpan = styled.span`\r\n  position: fixed;\r\n  right: 45px;\r\n  display: inline-flex;\r\n`;\r\nexport const DeleteButton = styled.button`\r\n  margin-left: 5px;\r\n  padding: 2px;\r\n  font-size: 10px;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n","import { Fragment } from 'react';\r\nimport Notification from '../Notification';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { makeSearch } from '../../redux/actions/filter_actions';\r\nimport { deleteContact, addContact } from '../../redux/actions/contacts_actions';\r\nimport { clearNewContactState } from '../../redux/actions/newContacts_actions';\r\nimport checkNewContactInState from '../../redux/functions/checkNewContactInState';\r\nimport useFilter from '../../redux/functions/useFilter';\r\nimport { ContactsItem, ContactsList, DeleteButton, NumberSpan, SearchInput } from './Contacts.styled';\r\n\r\nfunction Contacts({ contacts, searchFunc, deleteContact, message, newContact, addContact, clearNewContact, filter }) {\r\n  const filterdContacts = useFilter(contacts, filter);\r\n  if (newContact.name !== '' && checkNewContactInState(newContact, contacts)) {\r\n    addContact(newContact);\r\n    clearNewContact();\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <ContactsList>\r\n        <SearchInput\r\n          type='text'\r\n          name='search'\r\n          title='Введите имя или телефон'\r\n          placeholder='Search contact'\r\n          onInput={searchFunc}\r\n        />\r\n        {filterdContacts.length > 0 &&\r\n          filterdContacts.map(({ id, name, number }) => (\r\n            <ContactsItem key={id}>\r\n              {'• ' + name + ': '}\r\n              <NumberSpan>\r\n                {number}\r\n                <DeleteButton id={id} onClick={() => deleteContact(id, contacts)}>\r\n                  X\r\n                </DeleteButton>\r\n              </NumberSpan>\r\n            </ContactsItem>\r\n          ))}\r\n      </ContactsList>\r\n      {!filterdContacts.length && <Notification message={message}></Notification>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n  message: state.contacts.length ? 'Sorrry, no contacts found.' : 'Sorrry, you have no contacts yet.',\r\n  newContact: state.newContact,\r\n  filter: state.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  searchFunc: e => dispatch(makeSearch(e)),\r\n  deleteContact: (id, contacts) => dispatch(deleteContact(id, contacts)),\r\n  addContact: newContact => dispatch(addContact(newContact)),\r\n  clearNewContact: () => dispatch(clearNewContactState()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  searchFunc: PropTypes.func.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\n\nexport const SectionStyle = styled.section`\n  text-align: left;\n  max-width: 500px;\n  width: 100%;\n  margin: auto;\n  border: solid 1px black;\n  background-color: white;\n  filter: drop-shadow(2px 4px 6px black);\n  padding: 25px;\n  border-radius: 10px;\n  margin: 50px auto;\n`;\n\nexport const TitleH1 = styled.h1`\n  font-size: 28px;\n  margin: 0 0 20px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport Form from '../Form';\nimport Contacts from '../Contacts';\nimport { TitleH1, SectionStyle } from './Section.styled';\nimport { Notify } from 'notiflix';\n\nNotify.init({ position: 'center-top' });\n\nfunction Section({ title, component, doAddContact }) {\n  return (\n    <SectionStyle>\n      <TitleH1>{title}</TitleH1>\n      {component === 'Form' && <Form />}\n      {component === 'Contacts' && <Contacts />}\n    </SectionStyle>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  component: PropTypes.string.isRequired,\n};\n","import { connect } from 'react-redux';\nimport Section from './components/Section';\nimport { Notify } from 'notiflix';\nimport { addContact, deleteContact } from './redux/actions/contacts_actions.js';\nimport { makeSearch } from './redux/actions/filter_actions.js';\n// //state model\n// const STATE_MODEL = {\n//   contacts: [],\n//   filter: '',\n//   newContact: {\n//     newName: '',\n//     newNumber: '',\n//   },\n// };\n\nNotify.init({ position: 'center-top' });\n\nfunction App() {\n  return (\n    <>\n      <Section title='Phonebook' component='Form' />\n      <hr />\n      <Section title='Contacts' component='Contacts' />\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n    filter: state.filter,\n    newName: state.newContact.newName,\n    newNumber: state.newContact.newNumber,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    doAddContact: (name, number) => dispatch(addContact(name, number)),\n    doDeleteContact: () => dispatch(deleteContact),\n    makeSearch: () => dispatch(makeSearch),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import types from './types';\r\nconst localContacts = JSON.parse(window.localStorage.getItem('contacts'));\r\n\r\nexport const contactsReducer = (state = localContacts ? localContacts : [], { type, payload }) => {\r\n  let newState = [];\r\n  switch (type) {\r\n    case types.ADD:\r\n      newState = [...state, payload];\r\n      window.localStorage.setItem('contacts', JSON.stringify(newState));\r\n      return newState;\r\n    case types.DELETE:\r\n      newState = state.filter(({ id }) => id !== payload);\r\n      window.localStorage.setItem('contacts', JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const filterReducer = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const newContactReducer = (state = { newName: '', newNumber: '' }, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_NEW_CONTACT:\r\n      return payload;\r\n    case types.REMOVE_NEW_CONTACT:\r\n      return payload;\r\n    case types.CHECK_NEW_CONTACT:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { filterReducer, contactsReducer, newContactReducer } from './reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  newContact: newContactReducer,\r\n});\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\n\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}